// Mocks generated by Mockito 5.4.5 from annotations
// in game_deal/test/home_viewmodel_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:game_deal/models/deal.dart' as _i6;
import 'package:game_deal/services/api_service.dart' as _i3;
import 'package:game_deal/services/storage_service.dart' as _i7;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClient_0 extends _i1.SmartFake implements _i2.Client {
  _FakeClient_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i4.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i2.Client get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeClient_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Client);

  @override
  _i5.Future<List<_i6.Deal>> getDeals({String? title}) => (super.noSuchMethod(
        Invocation.method(
          #getDeals,
          [],
          {#title: title},
        ),
        returnValue: _i5.Future<List<_i6.Deal>>.value(<_i6.Deal>[]),
      ) as _i5.Future<List<_i6.Deal>>);
}

/// A class which mocks [StorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageService extends _i1.Mock implements _i7.StorageService {
  MockStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> initHive() => (super.noSuchMethod(
        Invocation.method(
          #initHive,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> saveDeal(_i6.Deal? deal) => (super.noSuchMethod(
        Invocation.method(
          #saveDeal,
          [deal],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> removeDeal(String? dealId) => (super.noSuchMethod(
        Invocation.method(
          #removeDeal,
          [dealId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  List<_i6.Deal> getSavedDeals() => (super.noSuchMethod(
        Invocation.method(
          #getSavedDeals,
          [],
        ),
        returnValue: <_i6.Deal>[],
      ) as List<_i6.Deal>);

  @override
  bool isDealSaved(String? dealId) => (super.noSuchMethod(
        Invocation.method(
          #isDealSaved,
          [dealId],
        ),
        returnValue: false,
      ) as bool);
}
